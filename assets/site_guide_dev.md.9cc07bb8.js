import{_ as s,c as a,o as n,M as l}from"./chunks/framework.acbd12ee.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"site/guide/dev.md","filePath":"site/guide/dev.md","lastUpdated":1685529996000}'),e={name:"site/guide/dev.md"},o=l(`<h2 id="开发规范" tabindex="-1">开发规范 <a class="header-anchor" href="#开发规范" aria-label="Permalink to &quot;开发规范&quot;">​</a></h2><p>在 <code>wlink</code> 开发过程中，已经自动化配置了一系列的工具，以保证代码质量</p><p>从而保证以下规则</p><pre><code>* 代码风格统一
* 代码注释规范
* 代码提交规范
</code></pre><p>务必遵守以上规则，以保证代码质量</p><p>使用 <code>commitizen</code> 保证提交规范以及代码风格和质量</p><p>全局安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commitizen</span></span></code></pre></div><p>使用项目中使用</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cz</span></span></code></pre></div><h2 id="antd封装规范" tabindex="-1">Antd封装规范 <a class="header-anchor" href="#antd封装规范" aria-label="Permalink to &quot;Antd封装规范&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">规范</p><p>在封装组件的时候，务必遵守以下规范:</p><p>因为在使用的时候，通常会使用按需加载，所以会导致使用该库，无法解析antd 组件。</p><p>所以这里在封装的时候，要按需导入。 例如对Select的封装</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Select</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ant-design-vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineComponent</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Select</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">components</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">ASelect</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Select</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div></div><h2 id="发布规范" tabindex="-1">发布规范 <a class="header-anchor" href="#发布规范" aria-label="Permalink to &quot;发布规范&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">注意</p><p>执行发布之前<code>build</code>下的<code>version.json</code> 要进行按需增加版本</p></div><div class="tip custom-block"><p class="custom-block-title">发布说明</p><p>目前通过执行 publish.sh 脚本，这里windows下需要安装git bash，然后执行 bash publish.sh。 脚本会依次执行 pnpm run build:all 然后再去执行各个包的 npm publish（这里必须使用 npm publish 去发布，自定义 monorepo 之间的依赖关系）, 而关于version的管理。后期看情况是否需要lerna或者changest等去统一管理。目前不是必须</p></div><h3 id="全部发布" tabindex="-1">全部发布 <a class="header-anchor" href="#全部发布" aria-label="Permalink to &quot;全部发布&quot;">​</a></h3><p>执行<code>scripts</code>下的<code>publish.sh</code> 脚本</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">./scripts/publish.sh</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">all</span></span></code></pre></div><h3 id="按包发布" tabindex="-1">按包发布 <a class="header-anchor" href="#按包发布" aria-label="Permalink to &quot;按包发布&quot;">​</a></h3><p>以<code>antd、element-ui、ui、utils、hooks</code>来作为参数进行单独发布</p><p>比如发布<code>antd</code>包</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">./scripts/publish.sh</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">antd</span></span></code></pre></div>`,22),p=[o];function t(c,i,r,d,y,h){return n(),a("div",null,p)}const F=s(e,[["render",t]]);export{u as __pageData,F as default};
